slug: ebpf-tracing
id: 76ozcl8orx9p
title: Performance observability in practice with bcc tools
teaser: Use bcc tools to collect data on system activities including disk performance
  and latency.
description: |
  # Goal:

  After completing this scenario, users will better understand the performance observability tools provided in Red Hat Enterprise Linux.

  # Concepts included in this scenario:
  * Install bcc-tools
  * Using bpftool to verify use of eBPF
  * Run trivial eBPF tracing tools to get familiar with the concept

  # Example Usecase:

  In this lab, you are going to use tools from the bcc-tools package to analyse what happens on a system during a `dnf update`. We picked `dnf update` because it represents a non-trivial, real world application. In a `dnf update`, the following activity happens:

  * TCP connections are established to configured repositories, which you will track with `gethostlatency` and `tcplife`.
  * Many files will be opened on your XFS filesystem, which you will observe with `filetop`. You will also use `xfsslower` to determine which XFS operations take longer than 10ms to execute.
  * Memory access. Linux uses a memory cache to ensure faster access to needed information than having to go to disk. Using `cachestat`, you will be able to see hits and misses on this cache in realtime. When everything Linux needs is cached, you should observe zero misses and while the cache is being populated, you will see a number of misses. If the cache continues to be populated beyond the size of the cache, Linux will employ a LRU (Least Recently Used) algorithm with a lot of heuristics and some cached data will be removed and replaced with new data.
icon: https://storage.googleapis.com/instruqt-frontend/img/tracks/default.png
tags:
- rhel
owner: rhel
developers:
- myee@redhat.com
- smcbrien@redhat.com
- wkibbe@redhat.com
show_timer: true
lab_config:
  overlay: false
  width: 33
  position: right
  feedback_recap_enabled: true
  loadingMessages: true
  lab_v2: false
  hideStopButton: false
checksum: "14880854859565018556"
